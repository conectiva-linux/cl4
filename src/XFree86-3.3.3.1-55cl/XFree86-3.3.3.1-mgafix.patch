--- XFree86/xc/programs/Xserver/hw/xfree86/vga256/drivers/mga/mga_xaarepl.c.orig	Fri Nov 13 17:16:30 1998
+++ XFree86/xc/programs/Xserver/hw/xfree86/vga256/drivers/mga/mga_xaarepl.c	Sun Mar  7 16:21:19 1999
@@ -147,6 +147,11 @@
   0x0FFFFFFF, 0x1FFFFFFF, 0x3FFFFFFF, 0x7FFFFFFF
 };
 
+struct CARD32_unaligned {
+	CARD32	unal32 __attribute__((packed));
+};
+
+typedef struct CARD32_unaligned CARD32u;
 
 static void
 MGAFillStippledCPUToScreenColorExpand(x, y, dwords, h, src, srcwidth,
@@ -172,7 +177,7 @@
 	while(h--) {
 	   switch(stipplewidth) {
 		case 32:
-	   	    pattern = *((CARD32*)srcp);  
+	   	    pattern = ((CARD32u*)srcp)->unal32;
 		    break;
 	      	case 16:
 		    kludge[0] = kludge[2] = srcp[0];
@@ -219,7 +224,7 @@
 
 	while(h--) {
 	   width = stipplewidth;
-	   pattern = *((CARD32*)srcp) & ShiftMasks[width];  
+	   pattern = ((CARD32u*)srcp)->unal32 & ShiftMasks[width];  
 	   while(!(width & ~15)) {
 		pattern |= (pattern << width);
 		width <<= 1;	
@@ -248,7 +253,7 @@
 	   }
 	}
     } else {
-	register CARD32* scratch;
+	register CARD32u* scratch;
 	int shift, offset, scratch2, count;
 
 	while(h--) {
@@ -257,18 +262,18 @@
 	   	   	
 	   while(count--) {
 	   	shift = stipplewidth - offset;
-		scratch = (CARD32*)(srcp + (offset >> 3));
+		scratch = (CARD32u*)(srcp + (offset >> 3));
 		scratch2 = offset & 0x07;
 
 		if(shift & ~31) {
 		   if(scratch2) {
-		      *(destptr++) = (*scratch >> scratch2) |
-			(scratch[1] << (32 - scratch2));
+		      *(destptr++) = (scratch->unal32 >> scratch2) |
+			(scratch[1].unal32 << (32 - scratch2));
 		   } else 
-		       *(destptr++) = *scratch; 
+		       *(destptr++) = scratch->unal32;
 		} else {
-		    *(destptr++) = (*((CARD32*)srcp) << shift) |
-			((*scratch >> scratch2) & ShiftMasks[shift]);
+		    *(destptr++) = (((CARD32u*)srcp)->unal32 << shift) |
+			((scratch->unal32 >> scratch2) & ShiftMasks[shift]);
 		}
 		offset += 32;
 		while(offset >= stipplewidth) 
