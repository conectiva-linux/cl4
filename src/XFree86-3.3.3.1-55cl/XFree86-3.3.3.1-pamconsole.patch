--- XFree86-3.3.3.1/xc/programs/Xserver/os/wrapper.c.pamconsole	Thu Apr  8 14:19:13 1999
+++ XFree86-3.3.3.1/xc/programs/Xserver/os/wrapper.c	Thu Apr  8 15:48:55 1999
@@ -50,6 +50,12 @@
 #include <string.h>
 #include <errno.h>
 #include <unistd.h>
+#include <sys/types.h>
+#ifdef USE_PAM
+#include <security/pam_appl.h>
+#include <security/pam_misc.h>
+#include <pwd.h>
+#endif /* USE_PAM */
 
 /* Neither of these should be required for XFree86 3.3.2 */
 #ifndef REJECT_CONFIG
@@ -99,7 +105,11 @@
     ArgTooLong,
     UnprintableArg,
     EnvTooLong,
-    InternalError
+    InternalError,
+#ifdef USE_PAM
+    PamFailed,
+    PamAuthFailed,
+#endif /* USE_PAM */
 };
 
 #define ARGMSG \
@@ -114,15 +124,61 @@
       "XFree86@XFree86.org.  In the meantime, you can start the Xserver as\n" \
       "the \"super user\" (root).\n"
 
+#ifdef USE_PAM
+static struct pam_conv conv = {
+    misc_conv,
+    NULL
+};
+#endif /* USE_PAM */
+
+
 int
 main(int argc, char **argv, char **envp)
 {
     enum BadCode bad = NotBad;
     int i, j;
     char *a, *e;
+#ifdef USE_PAM
+    pam_handle_t *pamh = NULL;
+    struct passwd *pw;
+    int retval;
+
+    pw = getpwuid(getuid());
+    if (pw == NULL) {
+	bad = InternalError;
+    }
+
+    if (!bad) {
+	retval = pam_start("xserver", pw->pw_name, &conv, &pamh);
+	if (retval != PAM_SUCCESS)
+	    bad = PamFailed;
+    }
+
+    if (!bad) {
+	retval = pam_authenticate(pamh, 0);
+	if (retval != PAM_SUCCESS) {
+	    pam_end(pamh, retval);
+	    bad = PamAuthFailed;
+	}
+    }
+
+    if (!bad) {
+	retval = pam_acct_mgmt(pamh, 0);
+	if (retval != PAM_SUCCESS) {
+	    pam_end(pamh, retval);
+	    bad = PamAuthFailed;
+	}
+    }
+
+    /* this is not a session, so do not do session management */
+
+    if (!bad) pam_end(pamh, PAM_SUCCESS);
+#endif /* USE_PAM */
 
 #if CHECK_EUID
-    if (geteuid() == 0 && getuid() != geteuid()) {
+    if (!bad && geteuid() == 0 && getuid() != geteuid()) {
+#else
+    if (!bad) {
 #endif
 	/* Check each argv[] */
 	for (i = 1; i < argc; i++) {
@@ -204,9 +260,7 @@
 #endif
 		}
 	    }
-#if CHECK_EUID
     }
-#endif
     switch (bad) {
     case NotBad:
 	execve(XSERVER_PATH, argv, envp);
@@ -233,6 +287,15 @@
     case InternalError:
 	fprintf(stderr, "Internal Error\n");
 	break;
+#ifdef USE_PAM
+    case PamFailed:
+	fprintf(stderr, "Authentication System Failure, "
+			"missing or mangled PAM configuration file or module?\n");
+	break;
+    case PamAuthFailed:
+	fprintf(stderr, "Authentication failed\n");
+	break;
+#endif
     default:
 	fprintf(stderr, "Unknown error\n");
 	fprintf(stderr, ARGMSG);
