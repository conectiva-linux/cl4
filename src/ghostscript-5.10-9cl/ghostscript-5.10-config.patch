--- gs5.10/unix-gcc.mak.config	Thu Dec 17 19:56:35 1998
+++ gs5.10/unix-gcc.mak	Wed Dec 23 12:59:46 1998
@@ -83,7 +83,7 @@
 INSTALL_PROGRAM = $(INSTALL) -m 755
 INSTALL_DATA = $(INSTALL) -m 644
 
-prefix = /usr/local
+prefix = /usr
 exec_prefix = $(prefix)
 bindir = $(exec_prefix)/bin
 scriptdir = $(bindir)
@@ -94,14 +94,14 @@
 gsdir = $(datadir)/ghostscript
 gsdatadir = $(gsdir)/$(GS_DOT_VERSION)
 
-docdir=$(gsdatadir)/doc
+docdir=$(prefix)/doc/ghostscript-5.10
 exdir=$(gsdatadir)/examples
 GS_DOCDIR=$(docdir)
 
 # Define the default directory/ies for the runtime
 # initialization and font files.  Separate multiple directories with a :.
 
-GS_LIB_DEFAULT=$(gsdatadir):$(gsdir)/fonts
+GS_LIB_DEFAULT=$(gsdatadir):/usr/share/fonts/default/ghostscript:/usr/share/fonts/default/Type1
 
 # Define whether or not searching for initialization files should always
 # look in the current directory first.  This leads to well-known security
@@ -148,27 +148,26 @@
 # You may need to change this if the libpng version changes.
 # See libpng.mak for more information.
 
-PSRCDIR=libpng
-PVERSION=96
+PSRCDIR=/usr/include
+PVERSION=102
 
 # Choose whether to use a shared version of the PNG library, and if so,
 # what its name is.
 # See gs.mak and make.txt for more information.
 
-SHARE_LIBPNG=0
+SHARE_LIBPNG=1
 LIBPNG_NAME=png
 
 # Define the directory where the zlib sources are stored.
 # See zlib.mak for more information.
 
-ZSRCDIR=zlib
+ZSRCDIR=/usr/include
 
 # Choose whether to use a shared version of the zlib library, and if so,
 # what its name is (usually libz, but sometimes libgz).
 # See gs.mak and make.txt for more information.
 
-SHARE_ZLIB=0
-#ZLIB_NAME=gz
+SHARE_ZLIB=1
 ZLIB_NAME=z
 
 # Define how to build the library archives.  (These are not used in any
@@ -198,7 +197,7 @@
 # add -Dconst= and remove -Wcast-qual and -Wwrite-strings.
 
 #GCFLAGS=-Wall -Wcast-qual -Wpointer-arith -Wstrict-prototypes -Wwrite-strings
-GCFLAGS=-Dconst= -Wall -Wpointer-arith -Wstrict-prototypes
+GCFLAGS=$(RPM_OPT_FLAGS) -Wall -Wcast-qual -Wpointer-arith -Wstrict-prototypes -Wwrite-strings
 
 # Define the other compilation flags.  Add at most one of the following:
 #	-DBSD4_2 for 4.2bsd systems.
@@ -213,7 +212,7 @@
 #   gcc to accept ANSI-style function prototypes and function definitions.
 XCFLAGS=
 
-CFLAGS=-O $(GCFLAGS) $(XCFLAGS)
+CFLAGS=$(GCFLAGS) $(XCFLAGS)
 
 # Define platform flags for ld.
 # SunOS 4.n may need -Bstatic.
@@ -238,7 +237,7 @@
 # Note that x_.h expects to find the header files in $(XINCLUDE)/X11,
 # not in $(XINCLUDE).
 
-XINCLUDE=-I/usr/local/X/include
+XINCLUDE=-I/usr/X11R6/include
 
 # Define the directory/ies and library names for the X11 library files.
 # XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH
@@ -253,9 +252,9 @@
 #XLIBS=Xt SM ICE Xext X11
 
 #XLIBDIRS=-L/usr/local/X/lib
-XLIBDIRS=-L/usr/X11/lib
+XLIBDIRS=-L/usr/X11R6/lib
 XLIBDIR=
-XLIBS=Xt Xext X11
+XLIBS=Xt SM ICE Xext X11
 
 # Define whether this platform has floating point hardware:
 #	FPU_TYPE=2 means floating point is faster than fixed point.
@@ -272,7 +271,7 @@
 
 # Choose the language feature(s) to include.  See gs.mak for details.
 
-FEATURE_DEVS=level2.dev pdf.dev pipe.dev
+FEATURE_DEVS=level2.dev pdf.dev pipe.dev ttfont.dev
 
 # Choose whether to compile the .ps initialization files into the executable.
 # See gs.mak for details.
@@ -298,16 +297,26 @@
 # Choose the device(s) to include.  See devs.mak for details.
 
 DEVICE_DEVS=x11.dev x11alpha.dev x11cmyk.dev x11gray2.dev x11mono.dev
-DEVICE_DEVS1=
-DEVICE_DEVS2=
-DEVICE_DEVS3=deskjet.dev djet500.dev laserjet.dev ljetplus.dev ljet2p.dev ljet3.dev ljet4.dev
-DEVICE_DEVS4=cdeskjet.dev cdjcolor.dev cdjmono.dev cdj550.dev pj.dev pjxl.dev pjxl300.dev
+DEVICE_DEVS1=ap3250.dev imagen.dev iwhi.dev iwlo.dev iwlq.dev \
+	la50.dev la70.dev la75.dev la75plus.dev lbp8.dev
+DEVICE_DEVS2=ln03.dev lj250.dev lj4dith.dev lp2563.dev m8510.dev necp6.dev \
+	oce9050.dev r4081.dev sj48.dev st800.dev stcolor.dev t4693d2.dev \
+	t4693d4.dev t4693d8.dev tek4696.dev xes.dev
+DEVICE_DEVS3=deskjet.dev djet500.dev djet500c.dev dnj650c.dev laserjet.dev \
+	ljetplus.dev ljet2p.dev ljet3.dev ljet3d.dev ljet4.dev
+DEVICE_DEVS4=cdeskjet.dev cdjcolor.dev cdjmono.dev cdj500.dev cdj550.dev \
+	paintjet.dev pj.dev pjxl.dev pjxl300.dev
 DEVICE_DEVS5=uniprint.dev
-DEVICE_DEVS6=bj10e.dev bj200.dev bjc600.dev bjc800.dev
-DEVICE_DEVS7=faxg3.dev faxg32d.dev faxg4.dev
-DEVICE_DEVS8=pcxmono.dev pcxgray.dev pcx16.dev pcx256.dev pcx24b.dev pcxcmyk.dev
-DEVICE_DEVS9=pbm.dev pbmraw.dev pgm.dev pgmraw.dev pgnm.dev pgnmraw.dev pnm.dev pnmraw.dev ppm.dev ppmraw.dev
-DEVICE_DEVS10=tiffcrle.dev tiffg3.dev tiffg32d.dev tiffg4.dev tifflzw.dev tiffpack.dev
+DEVICE_DEVS6=bj10e.dev bj200.dev bjc600.dev bjc800.dev epson.dev eps9mid.dev \
+	eps9high.dev epsonc.dev ibmpro.dev jetp3852.dev
+DEVICE_DEVS7=dfaxhigh.dev dfaxlow.dev faxg3.dev faxg32d.dev faxg4.dev \
+	cp50.dev
+DEVICE_DEVS8=pcxmono.dev pcxgray.dev pcx16.dev pcx256.dev pcx24b.dev \
+	pcxcmyk.dev
+DEVICE_DEVS9=pbm.dev pbmraw.dev pgm.dev pgmraw.dev pgnm.dev pgnmraw.dev \
+	pnm.dev pnmraw.dev ppm.dev ppmraw.dev
+DEVICE_DEVS10=tiffcrle.dev tiffg3.dev tiffg32d.dev tiffg4.dev tifflzw.dev \
+	tiffpack.dev
 DEVICE_DEVS11=tiff12nc.dev tiff24nc.dev
 DEVICE_DEVS12=psmono.dev psgray.dev bit.dev bitrgb.dev bitcmyk.dev
 DEVICE_DEVS13=pngmono.dev pnggray.dev png16.dev png256.dev png16m.dev
