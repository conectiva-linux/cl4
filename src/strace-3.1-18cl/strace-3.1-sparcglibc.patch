--- strace-3.1/defs.h.jj	Thu Mar 26 20:04:59 1998
+++ strace-3.1/defs.h	Thu Mar 26 20:28:44 1998
@@ -67,9 +67,18 @@
 #include <stddef.h>
 #endif /* STDC_HEADERS */
 
+#ifdef LINUX
+#ifdef SPARC
+#define LINUXSPARC
+#endif
+#endif
+
 #ifdef SVR4
 #include <sys/procfs.h>
 #else /* !SVR4 */
+#if defined(LINUXSPARC) && defined(__GLIBC__)
+#include <sys/ptrace.h>
+#else
 /* Work around awkward prototype in ptrace.h. */
 #define ptrace xptrace
 #include <sys/ptrace.h>
@@ -83,11 +92,14 @@ extern int ptrace(int, int, char *, int,
 #else /* !__STDC__ */
 extern int ptrace();
 #endif /* !__STDC__ */
+#endif /* !LINUXSPARC */
 #endif /* !SVR4 */
 
 #ifdef LINUX
+#if !defined(LINUXSPARC) || !defined(__GLIBC__)
 #define	PTRACE_PEEKUSER	PTRACE_PEEKUSR
 #define	PTRACE_POKEUSER	PTRACE_POKEUSR
+#endif
 #ifdef ALPHA
 #define REG_R0 0
 #define REG_A0 16
@@ -100,15 +112,12 @@ extern int ptrace();
 #define SUPPORTED_PERSONALITIES 1
 #define DEFAULT_PERSONALITY 0
 
-#ifdef LINUX
-#ifdef SPARC
+#ifdef LINUXSPARC
 #include <linux/a.out.h>
 #include <asm/psr.h>
-#define LINUXSPARC
 #undef  SUPPORTED_PERSONALITIES
 #define SUPPORTED_PERSONALITIES 2
-#endif /* SPARC */
-#endif /* LINUX */
+#endif /* LINUXSPARC */
 
 /* Trace Control Block */
 struct tcb {
--- strace-3.1/util.c.jj	Thu Mar 26 20:04:59 1998
+++ strace-3.1/util.c	Thu Mar 26 20:30:37 1998
@@ -44,7 +44,7 @@
 #include <sys/utsname.h>
 #endif /* SUNOS4_KERNEL_ARCH_KLUDGE */
 
-#if defined(LINUX) && defined(SPARC)
+#if defined(LINUX) && defined(SPARC) && !defined(__GLIBC__)
 
 #include <linux/unistd.h>
 
@@ -78,6 +78,8 @@ return -1; \
 
 static _hack_syscall5(int,_ptrace,int,__request,int,__pid,int,__addr,int,__data,int,__addr2,ptrace)
 
+#define _ptrace
+
 #endif
 
 /* macros */
@@ -595,7 +597,7 @@ char *laddr;
 	while (len) {
 		n = MIN(len, PAGSIZ);
 		n = MIN(n, ((addr + PAGSIZ) & PAGMASK) - addr);
-		if (_ptrace(PTRACE_READDATA, pid,
+		if (ptrace(PTRACE_READDATA, pid,
 			   (char *) addr, len, laddr) < 0) {
 			perror("umoven: ptrace(PTRACE_READDATA, ...)");
 			abort();
@@ -707,7 +709,7 @@ char *laddr;
 	while (len) {
 		n = MIN(len, PAGSIZ);
 		n = MIN(n, ((addr + PAGSIZ) & PAGMASK) - addr);
-		if (_ptrace(cmd, pid, (char *)addr, n, laddr) < 0) {
+		if (ptrace(cmd, pid, (char *)addr, n, laddr) < 0) {
 			perror("uload: ptrace(PTRACE_WRITE, ...)");
 			return -1;
 		}
@@ -977,7 +979,7 @@ struct tcb *tcp;
 		return -1;
 	}
 	tcp->baddr = regs.u_regs[UREG_I7] + 8;
-	if (_ptrace(PTRACE_READTEXT, tcp->pid, (char *)tcp->baddr,
+	if (ptrace(PTRACE_READTEXT, tcp->pid, (char *)tcp->baddr,
 				sizeof tcp->inst, (char *)tcp->inst) < 0) {
 		perror("setbpt: ptrace(PTRACE_READTEXT, ...)");
 		return -1;
@@ -993,7 +995,7 @@ struct tcb *tcp;
 	 * generated by out PTRACE_ATTACH.
 	 * Of cause, if we evaporate ourselves in the middle of all this...
 	 */
-	if (_ptrace(PTRACE_WRITETEXT, tcp->pid, (char *) tcp->baddr,
+	if (ptrace(PTRACE_WRITETEXT, tcp->pid, (char *) tcp->baddr,
 			sizeof loopdeloop, (char *) loopdeloop) < 0) {
 		perror("setbpt: ptrace(PTRACE_WRITETEXT, ...)");
 		return -1;
@@ -1130,7 +1132,7 @@ struct tcb *tcp;
 		fprintf(stderr, "PANIC: TCB not set in pid %u\n", tcp->pid);
 		return -1;
 	}
-	if (_ptrace(PTRACE_WRITETEXT, tcp->pid, (char *) tcp->baddr,
+	if (ptrace(PTRACE_WRITETEXT, tcp->pid, (char *) tcp->baddr,
 				sizeof tcp->inst, (char *) tcp->inst) < 0) {
 		perror("clearbtp: ptrace(PTRACE_WRITETEXT, ...)");
 		return -1;
--- strace-3.1/file.c.jj	Thu Mar 26 20:04:59 1998
+++ strace-3.1/file.c	Thu Mar 26 22:39:59 1998
@@ -334,29 +334,29 @@ time_t t;
 
 #ifdef LINUXSPARC
 typedef struct {
-        __s32     tv_sec;
-        __s32     tv_nsec;
+        int     tv_sec;
+        int     tv_nsec;
 } timestruct_t;
 
 struct solstat {
-        __u32             st_dev;
-        __s32             st_pad1[3];     /* network id */
-        __u32             st_ino;
-        __u32             st_mode;
-        __u32             st_nlink;
-        __u32             st_uid;
-        __u32             st_gid;
-        __u32             st_rdev;
-        __s32             st_pad2[2];
-        __s32             st_size;
-        __s32             st_pad3;        /* st_size, off_t expansion */
+        unsigned        st_dev;
+        int             st_pad1[3];     /* network id */
+        unsigned        st_ino;
+        unsigned        st_mode;
+        unsigned        st_nlink;
+        unsigned        st_uid;
+        unsigned        st_gid;
+        unsigned        st_rdev;
+        int             st_pad2[2];
+        int             st_size;
+        int             st_pad3;        /* st_size, off_t expansion */
         timestruct_t    st_atime;
         timestruct_t    st_mtime;
         timestruct_t    st_ctime;
-        __s32             st_blksize;
-        __s32             st_blocks;
+        int             st_blksize;
+        int             st_blocks;
         char            st_fstype[16];
-        __s32             st_pad4[8];     /* expansion area */
+        int             st_pad4[8];     /* expansion area */
 };
 
 static void
@@ -400,7 +400,7 @@ int addr;
 			(unsigned long) (statbuf.st_rdev & 0x3ffff));
 		break;
 	default:
-		tprintf("st_size=%lu, ", statbuf.st_size);
+		tprintf("st_size=%u, ", statbuf.st_size);
 		break;
 	}
 	if (!abbrev(tcp)) {
--- strace-3.1/process.c.jj	Thu Mar 26 20:04:59 1998
+++ strace-3.1/process.c	Thu Mar 26 22:47:59 1998
@@ -48,7 +48,7 @@
 #include <sys/prctl.h>
 #endif
 
-#if defined(LINUX) && defined(sparc)
+#ifdef LINUXSPARC
 #undef PTRACE_ATTACH
 #define PTRACE_ATTACH PTRACE_SUNATTACH
 #endif
@@ -57,7 +57,7 @@
 #define WCOREDUMP(status) ((status) & 0200)
 #endif
 
-#ifdef HAVE_PRCTL
+#if defined(HAVE_PRCTL) && !defined(LINUXSPARC)
 static struct xlat prctl_options[] = {
 	{ PR_MAXPROCS,		"PR_MAXPROCS"		},
 	{ PR_ISBLOCKED,		"PR_ISBLOCKED"		},
@@ -1149,7 +1149,7 @@ struct tcb *tcp;
 				uname.release, uname.version);
 			tprintf("machine=\"%s\"", uname.machine);
 #ifdef LINUX
-#ifndef ALPHA
+#if !defined(ALPHA) && !defined(sparc)
 			tprintf(", domainname=\"%s\"", uname.domainname);
 #endif /* ALPHA */
 #endif /* LINUX */
--- strace-3.1/system.c.jj	Thu Mar 26 20:04:59 1998
+++ strace-3.1/system.c	Thu Mar 26 22:52:29 1998
@@ -33,7 +33,25 @@
 
 #ifdef LINUX
 
+#ifdef __GLIBC__
+/*
+ * These are the fs-independent mount-flags: up to 16 flags are supported
+ */
+#define MS_RDONLY        1      /* Mount read-only */
+#define MS_NOSUID        2      /* Ignore suid and sgid bits */
+#define MS_NODEV         4      /* Disallow access to device special files */
+#define MS_NOEXEC        8      /* Disallow program execution */
+#define MS_SYNCHRONOUS  16      /* Writes are synced at once */
+#define MS_REMOUNT      32      /* Alter flags of a mounted FS */
+#define MS_MANDLOCK     64      /* Allow mandatory locks on an FS */
+#define S_QUOTA         128     /* Quota initialized for file/directory/symlink */
+#define S_APPEND        256     /* Append-only file */
+#define S_IMMUTABLE     512     /* Immutable file */
+#define MS_NOATIME      1024    /* Do not update access times. */
+#define MS_NODIRATIME   2048    /* Do not update directory access times */
+#else
 #include <linux/fs.h>
+#endif
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <arpa/inet.h>
