--- glibc-2.0.7/elf/dl-load.c.jbj	Tue Aug 25 16:52:32 1998
+++ glibc-2.0.7/elf/dl-load.c	Tue Aug 25 16:57:54 1998
@@ -238,6 +238,7 @@
 	int prot;
       } loadcmds[l->l_phnum], *c;
     size_t nloadcmds = 0;
+    size_t mydl_pagesize = _dl_pagesize;
 
     l->l_ld = 0;
     l->l_phdr = 0;
@@ -300,6 +301,8 @@
 	mapat = map_segment (c->mapstart,
 			     loadcmds[nloadcmds - 1].allocend - c->mapstart,
 			     c->prot, 0, c->mapoff);
+	while ((((size_t)mapat) & (mydl_pagesize - 1)) != 0)
+	    mydl_pagesize >>= 1;
 	l->l_addr = (ElfW(Addr)) mapat - c->mapstart;
 
 	/* Change protection on the excess portion to disallow all access;
@@ -329,7 +332,7 @@
 
 	    zero = l->l_addr + c->dataend;
 	    zeroend = l->l_addr + c->allocend;
-	    zeropage = (zero + _dl_pagesize - 1) & ~(_dl_pagesize - 1);
+	    zeropage = (zero + mydl_pagesize - 1) & ~(mydl_pagesize - 1);
 
 	    if (zeroend < zeropage)
 	      /* All the extra data is in the last page of the segment.
@@ -342,14 +345,14 @@
 		if ((c->prot & PROT_WRITE) == 0)
 		  {
 		    /* Dag nab it.  */
-		    if (__mprotect ((caddr_t) (zero & ~(_dl_pagesize - 1)),
-				    _dl_pagesize, c->prot|PROT_WRITE) < 0)
+		    if (__mprotect ((caddr_t) (zero & ~(mydl_pagesize - 1)),
+				    mydl_pagesize, c->prot|PROT_WRITE) < 0)
 		      lose (errno, "cannot change memory protections");
 		  }
 		memset ((void *) zero, 0, zeropage - zero);
 		if ((c->prot & PROT_WRITE) == 0)
-		  __mprotect ((caddr_t) (zero & ~(_dl_pagesize - 1)),
-			      _dl_pagesize, c->prot);
+		  __mprotect ((caddr_t) (zero & ~(mydl_pagesize - 1)),
+			      mydl_pagesize, c->prot);
 	      }
 
 	    if (zeroend > zeropage)
